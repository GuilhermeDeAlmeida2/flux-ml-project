apiVersion: apps/v1
kind: Deployment
metadata:
  name: flux-ml-api
  labels:
    app: flux-ml-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flux-ml-api
  template:
    metadata:
      labels:
        app: flux-ml-api
    spec:
      containers:
      - name: flux-ml-api
        image: flux-ml-api:latest
        ports:
        - containerPort: 5000
        env:
        - name: MODEL_CACHE_DIR
          value: "/app/models"
        - name: OUTPUT_DIR
          value: "/app/outputs"
        - name: REDIS_URL
          value: "redis://redis-service:6379/0"
        - name: ENABLE_MODEL_OFFLOAD
          value: "true"
        - name: GPU_MEMORY_FRACTION
          value: "0.8"
        resources:
          requests:
            memory: "8Gi"
            cpu: "2"
            nvidia.com/gpu: 1
          limits:
            memory: "16Gi"
            cpu: "4"
            nvidia.com/gpu: 1
        volumeMounts:
        - name: model-cache
          mountPath: /app/models
        - name: output-storage
          mountPath: /app/outputs
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: model-cache
        persistentVolumeClaim:
          claimName: model-cache-pvc
      - name: output-storage
        persistentVolumeClaim:
          claimName: output-storage-pvc
      nodeSelector:
        accelerator: nvidia-tesla-a10g  # ou nvidia-tesla-a100-40gb
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: model-cache-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: output-storage-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  storageClassName: standard

---
apiVersion: v1
kind: Service
metadata:
  name: flux-ml-service
spec:
  selector:
    app: flux-ml-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: flux-ml-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
spec:
  tls:
  - hosts:
    - flux-ml-api.yourdomain.com
    secretName: flux-ml-tls
  rules:
  - host: flux-ml-api.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: flux-ml-service
            port:
              number: 80

